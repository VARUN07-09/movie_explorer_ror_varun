openapi: 3.0.1
info:
  title: Movie Explorer API
  description: API documentation for the Movie Explorer application
  version: 1.0.0
  contact:
    name: Varun Thakur
    email: varun91thakur@gmail.com
    url: https://www.movieexplorer.com

paths:
  /api/v1/signup:
    post:
      summary: User signup
      description: Endpoint for user signup.
      operationId: signup
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                      example: "Varun"
                    email:
                      type: string
                      example: "Varun91thakur@gmail.com"
                    password:
                      type: string
                      example: "password123"
                    role:
                      type: string
                      example: "admin"
              required:
                - name
                - email
                - password
                - role
      responses:
        '201':
          description: Successfully created a new user
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "your.jwt.token.here"
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "Varun"
                      email:
                        type: string
                        example: "Varun91thakur@gmail.com"
                      role:
                        type: string
                        example: "admin"
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - "Email has already been taken"
                      - "Password is too short"

  /api/v1/login:
    post:
      summary: User login
      description: Endpoint for user login. Returns a JWT token.
      operationId: login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "Varun91thakur@gmail.com"
                password:
                  type: string
                  example: "password123"
              required:
                - email
                - password
      responses:
        '200':
          description: Successfully logged in and received token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "your.jwt.token.here"
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "Varun"
                      email:
                        type: string
                        example: "Varun91thakur@gmail.com"
                      role:
                        type: string
                        example: "admin"
        '401':
          description: Unauthorized - Invalid email or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid email or password"
