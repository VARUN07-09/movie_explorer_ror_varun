openapi: 3.0.1
info:
  title: Movie Explorer API
  description: API documentation for the Movie Explorer application
  version: 1.0.0
  contact:
    name: Varun Thakur
    email: varun91thakur@gmail.com
    url: https://www.movieexplorer.com

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

paths:
  /api/v1/signup:
    post:
      summary: User signup
      description: Creates a new user account.
      operationId: signup
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                      example: "Varun"
                    email:
                      type: string
                      example: "Varun91thakur@gmail.com"
                    password:
                      type: string
                      example: "password123"
                    role:
                      type: string
                      example: "user"
                  required:
                    - name
                    - email
                    - password
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "your.jwt.token.here"
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "Varun"
                      email:
                        type: string
                        example: "Varun91thakur@gmail.com"
                      role:
                        type: string
                        example: "user"
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - "Email has already been taken"
                      - "Password is too short"

  /api/v1/login:
    post:
      summary: User login
      description: Authenticates user and returns a JWT token.
      operationId: login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "Varun91thakur@gmail.com"
                password:
                  type: string
                  example: "password123"
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "your.jwt.token.here"
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "Varun"
                      email:
                        type: string
                        example: "Varun91thakur@gmail.com"
                      role:
                        type: string
                        example: "user"
        '401':
          description: Unauthorized - Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid email or password"

  /api/v1/movies:
    get:
      summary: Get all movies
      description: Retrieves a list of all available movies.
      operationId: getAllMovies
      tags:
        - Movies
      responses:
        '200':
          description: Successful response with movie list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    title:
                      type: string
                      example: "Inception"
                    genre:
                      type: string
                      example: "Sci-Fi"
                    release_year:
                      type: integer
                      example: 2010
                    rating:
                      type: number
                      format: float
                      example: 8.8
                    language:
                      type: string
                      example: "English"
                    origin:
                      type: string
                      example: "USA"
                    poster_url:
                      type: string
                      example: "https://image.tmdb.org/t/p/w500/qmDpIHrmpJINaRKAfWQfftjCdyi.jpg"

    post:
      summary: Add multiple movies
      description: Adds one or more movies to the database.
      operationId: createMovies
      tags:
        - Movies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                movies:
                  type: array
                  items:
                    type: object
                    properties:
                      title:
                        type: string
                        example: "Inception"
                      genre:
                        type: string
                        example: "Sci-Fi"
                      release_year:
                        type: integer
                        example: 2010
                      rating:
                        type: number
                        format: float
                        example: 8.8
                      language:
                        type: string
                        example: "English"
                      origin:
                        type: string
                        example: "USA"
                      poster_url:
                        type: string
                        example: "https://image.tmdb.org/t/p/w500/qmDpIHrmpJINaRKAfWQfftjCdyi.jpg"
              required:
                - movies
      responses:
        '201':
          description: Movies added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Movies added successfully."
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                    example:
                      - "Title is required"
                      - "Rating must be a number"

  /api/v1/movies/{id}:
    get:
      summary: Get movie by ID
      description: Retrieves details of a specific movie by its ID.
      operationId: getMovieById
      tags:
        - Movies
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the movie to retrieve
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Movie details retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: "Inception"
                  genre:
                    type: string
                    example: "Sci-Fi"
                  release_year:
                    type: integer
                    example: 2010
                  rating:
                    type: number
                    format: float
                    example: 8.8
                  language:
                    type: string
                    example: "English"
                  origin:
                    type: string
                    example: "USA"
                  poster_url:
                    type: string
                    example: "https://image.tmdb.org/t/p/w500/qmDpIHrmpJINaRKAfWQfftjCdyi.jpg"
        '404':
          description: Movie not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Movie not found"
  